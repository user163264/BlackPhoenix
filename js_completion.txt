        const toastHtml = `
            <div class="toast ${bgClass} text-white" id="${toastId}" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-body d-flex align-items-center">
                    <i class="bi ${iconClass} me-2"></i>
                    <span class="flex-grow-1">${this.escapeHtml(message)}</span>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        
        toastContainer.insertAdjacentHTML('beforeend', toastHtml);
        
        const toastElement = document.getElementById(toastId);
        const toast = new bootstrap.Toast(toastElement, { delay: 4000 });
        toast.show();
        
        // Remove element after it's hidden
        toastElement.addEventListener('hidden.bs.toast', () => {
            toastElement.remove();
        });
    }
    
    escapeHtml(text) {
        if (!text) return '';
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
}

// Initialize the prompt library
let promptLibrary;

document.addEventListener('DOMContentLoaded', function() {
    promptLibrary = new PromptLibrary();
    
    // Check for session storage data for testing tools
    const storedPrompt = sessionStorage.getItem('testSystemPrompt');
    if (storedPrompt && (window.location.pathname === '/token-obfuscation' || window.location.pathname === '/system-saturation')) {
        const systemPromptElement = document.getElementById('systemPrompt');
        if (systemPromptElement) {
            systemPromptElement.value = storedPrompt;
            sessionStorage.removeItem('testSystemPrompt');
        }
    }
});
</script>
{% endblock %}